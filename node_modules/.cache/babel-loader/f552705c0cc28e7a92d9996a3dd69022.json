{"ast":null,"code":"var _jsxFileName = \"/Users/andreabender/Desktop/Projects/Week5/Day4/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Mainpage from './Mainpage';\nimport Header from './Header';\nimport AddFolder from './AddFolder';\nimport FolderView from './FolderView';\nimport NoteView from './NoteView';\nimport './dummy-store';\nimport './css/App.css';\nimport UserContext from './UserContext';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      folders: []\n    };\n\n    this.deleteNote = noteId => {\n      const newNotes = this.state.notes.filter(item => item.id !== noteId);\n      this.setState({\n        notes: newNotes\n      });\n    };\n\n    this.addFolder = folderName => {\n      const newFolder = this.state.folders.concat();\n      this.setState({\n        folders: newFolder\n      });\n    };\n  }\n\n  componentDidMount() {\n    const folderUrl = 'http://localhost:9090/folders';\n    const notesUrl = 'http://localhost:9090/notes';\n    fetch(folderUrl).then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n\n      return res.json();\n    }).then(res => this.setState({\n      folders: res\n    })).catch(error => console.log(error.message));\n    fetch(notesUrl).then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n\n      return res.json();\n    }).then(res => this.setState({\n      notes: res\n    })).catch(error => console.log(error.message));\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteRequest: this.deleteNote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"\",\n      component: Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/folder/:folderid/note/:noteid/\",\n      render: props => React.createElement(React.Fragment, null, React.createElement(NoteView, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/folder/:folderid/\",\n      render: props => {\n        return React.createElement(FolderView, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => {\n        return React.createElement(Mainpage, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andreabender/Desktop/Projects/Week5/Day4/src/App.js"],"names":["React","Component","Route","Switch","Mainpage","Header","AddFolder","FolderView","NoteView","UserContext","App","state","notes","folders","deleteNote","noteId","newNotes","filter","item","id","setState","addFolder","folderName","newFolder","concat","componentDidMount","folderUrl","notesUrl","fetch","then","res","ok","Error","status","json","catch","error","console","log","message","render","deleteRequest","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch }from 'react-router-dom';\nimport Mainpage from './Mainpage';\nimport Header from './Header';\nimport AddFolder from './AddFolder';\nimport FolderView from './FolderView';\nimport NoteView from './NoteView';\nimport './dummy-store'\nimport './css/App.css'\nimport UserContext from './UserContext';\n\nclass App extends Component {\n\n  state = {\n    notes: [],\n    folders: [],\n  }\n  \n  deleteNote= noteId =>{\n    const newNotes = this.state.notes.filter(item =>\n      item.id !== noteId\n      )\n      this.setState({\n        notes: newNotes\n      })\n  }\n\n  addFolder = folderName =>{\n    const newFolder= this.state.folders.concat(\n      //name and id\n    )\n    this.setState({\n      folders: newFolder\n    })\n    }\n  \n\n  componentDidMount() {\n    const folderUrl= 'http://localhost:9090/folders';\n    const notesUrl='http://localhost:9090/notes';\n\n    fetch(folderUrl)\n      .then(res => {\n        if(!res.ok){\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(res => this.setState({\n        folders:res,\n      }))\n      .catch(error => console.log(error.message));\n\n      fetch(notesUrl)\n      .then(res => {\n        if(!res.ok){\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(res => this.setState({\n        notes: res,\n      }))\n      .catch(error => console.log(error.message));\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={{\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteRequest: this.deleteNote,\n      }}>\n        <main className='App'>\n          <Route path='' component={Header} />\n          <Switch>\n            <Route path='/folder/:folderid/note/:noteid/' render={(props) => <><NoteView {...props}/></>}/>\n            <Route path='/folder/:folderid/' render={(props)=> {\n              return <FolderView {...props}/>}} />\n            <Route exact path='/' render={(props)=> {\n              return <Mainpage {...props}/>\n            }} />\n          </Switch>\n        </main>\n      </UserContext.Provider>\n    );\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}