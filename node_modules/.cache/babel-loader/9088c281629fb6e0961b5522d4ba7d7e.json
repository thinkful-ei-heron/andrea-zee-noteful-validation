{"ast":null,"code":"var _jsxFileName = \"/Users/andreabender/Desktop/Projects/Week5/Day4/src/NoteList.js\";\nimport React, { Component } from 'react';\nimport Note from './Note';\nimport UserContext from './UserContext';\nimport './css/NoteList.css';\nexport default class NoteList extends Component {\n  render() {\n    let notes = this.context.notes;\n\n    if (this.props.selectedNote) {\n      notes = notes.filter(note => note.id === this.props.selectedNote);\n    } else {\n      if (this.props.selectedId) {\n        notes = notes.filter(note => note.folderId === this.props.selectedId);\n      } else {\n        notes = this.context.notes;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"notelist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, notes.map(note => React.createElement(Note, {\n      key: note.id,\n      id: note.id,\n      name: note.name,\n      modified: note.modified,\n      folderId: note.folderId,\n      content: note.content,\n      selectedNote: this.props.selectedNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))), this.props.selectedNote ? React.createElement(React.Fragment, null) : React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add Note\"));\n  }\n\n}\nNoteList.contextType = UserContext;","map":{"version":3,"sources":["/Users/andreabender/Desktop/Projects/Week5/Day4/src/NoteList.js"],"names":["React","Component","Note","UserContext","NoteList","render","notes","context","props","selectedNote","filter","note","id","selectedId","folderId","map","name","modified","content","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAG9CI,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAAzB;;AAEA,QAAG,KAAKE,KAAL,CAAWC,YAAd,EAA2B;AACzBH,MAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,KAAKJ,KAAL,CAAWC,YAA5C,CAAR;AAED,KAHD,MAGM;AACN,UAAG,KAAKD,KAAL,CAAWK,UAAd,EAAyB;AACvBP,QAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACG,QAAL,KAAkB,KAAKN,KAAL,CAAWK,UAAlD,CAAR;AACD,OAFD,MAGI;AACFP,QAAAA,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAArB;AACD;AACF;;AAEC,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACS,GAAN,CAAUJ,IAAI,IACZ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AACA,MAAA,EAAE,EAAED,IAAI,CAACC,EADT;AAEA,MAAA,IAAI,EAAED,IAAI,CAACK,IAFX;AAGA,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAHf;AAIA,MAAA,QAAQ,EAAEN,IAAI,CAACG,QAJf;AAKA,MAAA,OAAO,EAAEH,IAAI,CAACO,OALd;AAMA,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWC,YANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF,EAaG,KAAKD,KAAL,CAAWC,YAAX,GAA0B,yCAA1B,GAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbrC,CADF;AAiBD;;AAnC6C;AAA3BL,Q,CACZe,W,GAAchB,W","sourcesContent":["import React, { Component } from 'react'\nimport Note from './Note'\nimport UserContext from './UserContext'\nimport './css/NoteList.css'\n\nexport default class NoteList extends Component {\n  static contextType = UserContext\n\n  render() {\n    let notes = this.context.notes\n\n    if(this.props.selectedNote){\n      notes = notes.filter(note => note.id === this.props.selectedNote)\n\n    }else {\n    if(this.props.selectedId){\n      notes = notes.filter(note => note.folderId === this.props.selectedId)\n    }\n    else{\n      notes = this.context.notes\n    }\n  }\n\n    return (\n      <div className=\"notelist\">\n        <div>\n          {\n            notes.map(note => \n              <Note key={note.id}\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n              folderId={note.folderId}\n              content={note.content}\n              selectedNote={this.props.selectedNote} />)\n            }\n        </div>\n        {this.props.selectedNote ? <></> : <button>Add Note</button>}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}