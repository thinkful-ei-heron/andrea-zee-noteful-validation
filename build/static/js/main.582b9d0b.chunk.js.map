{"version":3,"sources":["Folder.js","UserContext.js","AddFolder.js","FolderList.js","Note.js","NoteList.js","Mainpage.js","Header.js","FolderView.js","AddNote.js","NoteView.js","App.js","index.js"],"names":["Folder","link","this","props","id","activeClassName","to","className","name","Component","UserContext","React","createContext","notes","foldes","deleteRequest","AddFolder","state","handleSubmit","e","preventDefault","addFolder","handleChange","console","log","setState","onSubmit","htmlFor","type","onChange","target","value","FolderList","addingFolder","handleClick","folders","context","selectedNote","filter","folder","selectedId","map","key","onClick","contextType","Note","linkDest","folderId","content","modified","noteId","callback","fetch","method","headers","then","res","ok","Error","status","json","data","catch","error","NoteList","addingNote","note","addNote","Mainpage","Header","FolderView","match","params","folderid","NoteView","noteid","history","goBack","App","deleteNote","newNotes","item","folderName","body","JSON","stringify","noteName","message","Provider","path","component","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.582b9d0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './css/Folder.css'\n// import UserContext from './UserContext';\n\nexport default class Folder extends Component {\n\n  render() {\n    let link='/folder/'+this.props.id+'/'\n    return (\n      <NavLink activeClassName=\"active\" to={link} className=\"folder\">\n        <p>{this.props.name}</p>\n      </NavLink>\n    )\n  }\n}\n","import React from 'react';\n\nconst UserContext = React.createContext({\n  notes: [],\n  foldes: [],\n  deleteRequest: () => {},\n})\n\nexport default UserContext","import React from 'react';\n\n\nexport default class AddFolder extends React.Component {\n    state = {\n        name: \"\"\n    }\n\n    handleSubmit= (e) =>{\n        e.preventDefault();\n        this.props.addFolder(this.state.name);\n    }\n\n    handleChange= (e) => {\n        console.log(e);\n    this.setState({name: e})\n    } \n\n\n    render() {\n        return (\n            <form className= 'add-folder' onSubmit={e => this.handleSubmit(e)}>\n                <label htmlFor='folder-name'> Folder Name:</label>\n                <input type='text' onChange={e => this.handleChange(e.target.value)} name='folder-name' id='folder-name'/>\n                <button type='submit'>Add</button>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Folder from './Folder'\nimport './dummy-store'\nimport UserContext from './UserContext'\nimport './css/FolderList.css'\nimport AddFolder from './AddFolder'\n\nexport default class FolderList extends Component {  \n  static contextType = UserContext;\n  state = { \n    addingFolder: false\n  }\n\n  handleClick = () => {\n    if( this.state.addingFolder === false) {\n      this.setState({addingFolder: true})\n    } else {\n      this.setState({addingFolder: false})\n    }\n  }\n  \n\n  render() {\n    let folders = this.context.folders;\n    if(this.props.selectedNote){\n      folders = folders.filter(folder => folder.id === this.props.selectedId)\n    }\n    return (\n      <div className=\"folderlist\">\n        {folders.map(folder =>\n          <Folder id={folder.id} key={folder.id} name={folder.name}/>\n        )}\n\n        {this.props.selectedNote ? <></> : <button className=\"add-folder\" onClick={e => this.handleClick(e)}>Add Folder</button>}\n        {this.state.addingFolder ? <AddFolder addFolder={this.props.addFolder}/> : <></>}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport UserContext from './UserContext'\nimport { Link } from 'react-router-dom'\nimport './css/Note.css'\n\nfunction deleteNote(noteId, callback){\n  fetch(`http://localhost:9090/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n  })\n  .then(res => {\n    if(!res.ok){\n      throw new Error(res.status)\n    }\n    return res.json()\n  })\n  .then(data =>{\n    callback(noteId)\n  })\n  .catch(error => {\n    console.error(error)\n  })\n}\n\n\nexport default class Note extends Component {\n\n  static contextType= UserContext;\n  \n  render() {\n      let linkDest = '/folder/' + this.props.folderId + '/note/' + this.props.id\n      return (\n        <div>\n          <Link to={linkDest} className=\"note\">\n            <h3 className=\"note-header\">\n              {this.props.name}\n            </h3>\n          </Link>\n          {this.props.selectedNote ? <p>{this.props.content}</p> : <></>}\n            <p>Date modified on {this.props.modified}</p>\n          <div className=\"note-delete\">\n            <button onClick={() => {\n              deleteNote(\n                this.props.id,\n                this.context.deleteRequest,\n              )\n            }}\n            >Delete Note</button>\n          </div>\n        </div>\n      )\n  }\n}","import React, { Component } from 'react'\nimport Note from './Note'\nimport { Link } from 'react-router-dom'\nimport UserContext from './UserContext'\nimport './css/NoteList.css'\n\nexport default class NoteList extends Component {\n  static contextType = UserContext\n  state={\n    addingNote: false\n  }\n\n  render() {\n    let notes = this.context.notes\n\n    if(this.props.selectedNote){\n      notes = notes.filter(note => note.id === this.props.selectedNote)\n\n    }else {\n    if(this.props.selectedId){\n      notes = notes.filter(note => note.folderId === this.props.selectedId)\n    }\n    else{\n      notes = this.context.notes\n    }\n  }\n\n    return (\n      <div className=\"notelist\">\n        <div>\n          {\n            notes.map(note => \n              <Note key={note.id}\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n              folderId={note.folderId}\n              content={note.content}\n              selectedNote={this.props.selectedNote} />)\n            }\n        </div>\n        {this.props.selectedNote ? <></> : <Link to ='/addNote' className= 'add-note' addNote={this.props.addNote} >Add Note</Link>}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport FolderList from './FolderList';\nimport NoteList from './NoteList';\nimport './css/Mainpage.css'\n\nexport default class Mainpage extends Component {\n  render() {\n    return (\n      <div className='main-elements'>\n        <FolderList folders={this.props.folders} addFolder={this.props.addFolder}/>\n        <NoteList notes={this.props.notes}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/Header.css'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <Link to='/'><h1>Noteful</h1></Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport FolderList from './FolderList';\nimport NoteList from './NoteList';\nimport './dummy-store';\nimport './css/FolderView.css'\n\nexport default class FolderView extends Component {\n\n  render() {\n    console.log(this.props.addFolder)\n    return (\n      <div className='main-elements'>\n        <FolderList addFolder={this.props.addFolder} selectedId={this.props.match.params.folderid}/>\n        <NoteList selectedId={this.props.match.params.folderid} />\n        <div className=\"folder-view\"></div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n// import UserContext from './UserContext'\n\n\nexport default class AddNote extends React.Component {\n\n    // static sontextType= UserContext;\n\n    state= {\n        note: {\n            name: '',\n            content: '',\n            folderId: '',\n            modified: ''\n        }\n    }\n\n    setName =(input) =>{\n        const createNote= this.state.note\n        createNote.name= input\n        createNote.modified= new Date ()\n        this.setState({note: createNote})\n    }\n    setContent=(input) =>{\n        const createNote= this.state.note\n        createNote.content= input\n        this.setState({note: createNote})\n    }\n    setId=(input) =>{\n        const createNote= this.state.note\n        createNote.folderId= input\n        this.setState({note: createNote})\n    }\n    handleNoteChange=(e) => {\n        this.setState({note: e})\n    }\n    handleNoteSubmit= (e) =>{\n        e.preventDefault();\n        this.props.addNote(this.state.note);\n    }\n    // handleNewNote =(addNote) =>{\n    //     const input= this.state.note\n    //     const data= JSON.stringify({\n    //         name: `${input.name}`,\n    //         content: `${input.content}`,\n    //         folderId: `${input.folderId}`,\n    //         modified: `${input.modified}`\n    //     })\n    //     fetch(`http://localhost:9090/notes`, {\n    //         method: 'POST',\n    //         headers: {'content-type': 'application/json'},\n    //         body: data\n    //     })\n    //     .then(res => {\n    //         if(!res.ok){\n    //           throw new Error(res.status)\n    //         }\n    //         return res.json()\n    //       })\n    //       .then(data => {\n    //         console.log(data.name)\n    //         console.log(data.id)\n    //         addNote(data.name, data.content, data.modified, data.folderId, data.id)\n    //         return data\n    //       })\n    //       .catch(error => {\n    //         console.error(error)\n    //       })\n    \n    render() {\n        return (\n            <form className='add-note' onSubmit={e => this.handleNoteSubmit(e)}>\n                <label htmlFor='note'> Note Name:</label>\n                <input id= 'name' type= 'text' value={this.state.note.name} onChange = {e => {\n                    this.setName(e.target.value)\n                }}/>\n                <label htmlFor= 'content'> Content:</label>\n                <input id='content' type= 'text' value= {this.state.note.content}\n                onChange= {e => this.setContent(e.target.value)}/>\n                <select id='folderId'\n                onChange= {e => this.setId(e.target.value)}>\n                <option value=''>Select a Folder</option>\n                <input type='text' onChange={e => this.handleNoteChange(e.target.value)} name='note-name' id='note-name'/>\n                <button type='submit'>Add</button>\n              {/* {this.context.folders.map(index =>\n                <option key={index.id} value={index.id}>{index.name}</option>)} */} */}\n                </select>\n                {/* <select>\n                    <Link to='/' type='submit' onClick={e => {\n                        e.preventDefault()\n                        this.handleNewNote(\n                            this.context.addNote\n                        )\n                        this.props.history.push('/')\n                    }}>\n                    Submit\n                    </Link>\n                </select> */}\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport FolderList from './FolderList';\nimport NoteList from './NoteList';\nimport './css/NoteView.css'\n\nexport default class NoteView extends Component {\n\n  render() {\n    return (\n      <div className='main-elements'>\n        <FolderList selectedId={this.props.match.params.folderid} selectedNote={this.props.match.params.noteid}/>\n        <NoteList addNote= {this.props.addNote} selectedNote={this.props.match.params.noteid}/>\n        <button onClick={() => this.props.history.goBack()}>Go Back</button>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Route, Switch }from 'react-router-dom';\nimport Mainpage from './Mainpage';\nimport Header from './Header';\nimport AddFolder from './AddFolder';\nimport AddNote from './AddNote';\nimport FolderView from './FolderView';\nimport NoteView from './NoteView';\nimport './dummy-store'\nimport './css/App.css'\nimport UserContext from './UserContext';\n\nclass App extends Component {\n\n  state = {\n    notes: [],\n    folders: [],\n  }\n  \n  deleteNote= noteId =>{\n    const newNotes = this.state.notes.filter(item =>\n      item.id !== noteId\n      )\n      this.setState({\n        notes: newNotes\n      })\n  }\n\n  addFolder = folderName =>{\n    fetch(`http://localhost:9090/folders`, {\n      method: 'POST',\n      body: JSON.stringify({name: folderName}),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        throw new Error(res.status)\n      }\n      return res.json()\n    })\n    .then(data => this.setState({folders: [...this.state.folders, data]}))\n    }\n\n\n// addNote =(addNote) =>{\n//         const input= this.state.note\n//         const data= JSON.stringify({\n//             name: `${input.name}`,\n//             content: `${input.content}`,\n//             folderId: `${input.folderId}`,\n//             modified: `${input.modified}`\n//         })\n//         fetch(`http://localhost:9090/notes`, {\n//             method: 'POST',\n//             headers: {'content-type': 'application/json'},\n//             body: data\n//         })\n//         .then(res => {\n//             if(!res.ok){\n//               throw new Error(res.status)\n//             }\n//             return res.json()\n//           })\n//           .then(data => {\n//             console.log(data.name)\n//             console.log(data.id)\n//             addNote(data.name, data.content, data.modified, data.folderId, data.id)\n//             return data\n//           })\n//           .catch(error => {\n//             console.error(error)\n//           })\n\n\n    addNote = noteName =>{\n      fetch(`http://localhost:9090/notes`, {\n        method: 'POST',\n        body: JSON.stringify({name: noteName}),\n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n      .then(res => {\n        if(!res.ok){\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(data => this.setState({notes: [...this.state.notes, data]}))\n      }\n\n\n\n    // addNote = (name, content, modified, folderId, id) => {\n    //   const noteToAdd = [{\n    //     name: name,\n    //     content: content,\n    //     id: id,\n    //     modified: modified,\n    //     folderId: folderId\n    //   }]\n    //   this.setState({\n    //     notes: [...this.setState.notes, noteToAdd]\n    //     // notes: this.state.notes.concat(noteToAdd)\n    //   });\n    // }\n\n  componentDidMount() {\n    const folderUrl= 'http://localhost:9090/folders';\n    const notesUrl='http://localhost:9090/notes';\n\n    fetch(folderUrl)\n      .then(res => {\n        if(!res.ok){\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(res => this.setState({\n        folders:res,\n      }))\n      .catch(error => console.log(error.message));\n\n      fetch(notesUrl)\n      .then(res => {\n        if(!res.ok){\n          throw new Error(res.status)\n        }\n        return res.json()\n      })\n      .then(res => this.setState({\n        notes: res,\n      }))\n      .catch(error => console.log(error.message));\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={{\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteRequest: this.deleteNote,\n      }}>\n        <main className='App'>\n          <Route path='' component={Header} />\n          <Switch>\n            <Route path='/folder/:folderid/note/:noteid/' render={(props) => <><NoteView {...props} addNote={this.addNote}/></>}/>\n            <Route path='/folder/:folderid/' render={(props)=> {\n              return <FolderView {...props} addFolder={this.addFolder}/>}} />\n            <Route exact path='/' render={(props)=> {\n              return <Mainpage {...props} addFolder={this.addFolder}/>\n            }} />\n          </Switch>\n        </main>\n      </UserContext.Provider>\n    )\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './css/index.css';\n\nReactDOM.render(\n      <BrowserRouter>\n       <App />\n     </BrowserRouter>, \n      document.getElementById('root'));"],"sourceRoot":""}